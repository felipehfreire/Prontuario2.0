@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Agenda Médica";
}

@*<link href="~/content/bootstrap-fullcalendar.css" rel="stylesheet" />*@
@*<link href="~/content/messenger/messenger-theme-flat.css" rel="stylesheet" />*@

@*<link href="~/content/messenger/messenger.css" rel="stylesheet" />*@

@*<script src="@Url.Content("~/Scripts/jquery-1.11.3.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/moment.min.js")" type="text/javascript"></script>*@
@*<script src="@Url.Content("~/Scripts/fullcalendar.min.js")" type="text/javascript"></script>*@
@*<script src="~/scripts/plugins/messenger/messenger-theme-flat.js"></script>
<script src="~/scripts/plugins/messenger/messenger.min.js"></script>*@
@*<link href="~/content/select2/select2.min.css" rel="stylesheet" />
<link href="~/content/select2/select2-bootstrap.min.css" rel="stylesheet" />
<script src="~/scripts/plugins/select2/select2.min.js"></script>*@
@Scripts.Render("~/bundles/fullcalendar")
@*@Scripts.Render("~/bundles/select2")*@


<section class="main-content-wrapper">
    <div class="pageheader">
        <h1 style="color: #999;">@ViewBag.Title</h1>
        <div class="breadcrumb-wrapper hidden-xs">
            <span class="label">Você está aqui:</span>
            <ol class="breadcrumb">
                <li>
                    Agenda
                </li>
                <li class="active">Agenda Médica</li>
            </ol>
        </div>
    </div>
    <section id="main-content" class="animated fadeInUp">
        <div class="row">
            <div class="col-md-6">
                @*@Html.HiddenFor(p => p.co)*@
                <div>
                    <select id="pesquisaPacientes2" class="js-data-example-ajax" style="width:100%"></select>
                </div>
                <div class="panel panel-footer">
                    <button type="button" id="btnSearch" class="btn btn-success btn-3d">
                        <i class="fa fa-search"></i>
                        Pesquisar
                    </button>
                </div>
                
            </div>
            <div class="col-md-6">
                <button type="button" style="background-color: #2FB2DE;" class="btn">Aguardando confirmação</button>
                <button type="button" style="background-color: #1a1566;" class="btn">Aguardando Ficha</button>
                <button type="button" style="background-color: #e28b34;" class="btn">Atendimento Iniciado </button>
                <button type="button" style="background-color: #377245;" class="btn">Atendimento realizado </button>
                <button type="button" style="background-color: #36D65B;" class="btn">Confirmado </button>
                <button type="button" style="background-color: #E8DC3A;" class="btn">Confirmado atrasado </button>
                <button type="button" style="background-color: #DE4040;" class="btn">Falta, Cancelado </button>
                <button type="button" style="background-color: #336ea5;" class="btn">Fazendo Ficha </button>
                <button type="button" style="background-color: #3d35ad;" class="btn">Liberado para atendimento </button>
                <button type="button" style="background-color: #CCCCCC;" class="btn">Presente </button>
                <button type="button" style="background-color: #00b22a;" class="btn">Remarcado </button>
            </div>
        </div>
        <div class="row">
            <div >
                <div id='calendar'></div>
            </div>
</div>
    </section>
</section>

@*-------------------*@
<script type="text/javascript">
    var DataDeDadosCarregados;
    var DataAteDadosCarregados;
    var CalendarView;
    var PacienteQueryDownTimmer = -1;
    $("#btnSearch").click(function () {
        debugger
        if ($("#pesquisaPacientes2").val() == null || $("#pesquisaPacientes2").val() == "") {
            debugger
            showMsgErro("Por favor selecione um paciente");

            return false;
        }
        GetAtendimentos();

    });
    $(document).ready(function () {
      
        CreateCalendar();
        GetAtendimentos();
        $('.fc-button').show();
        $('.fc-button-group').show();
        $("#pesquisaPacientes2").select2({
            ajax: {
                url: '@Url.Content("~/Agenda/PesquisarPacienteS2")',
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        q: params.term, // search term
                        page: params.page//,
                        //id: $("#clientes2").val()
                    };
                },
                error: function (a, b, c) {
                    debugger
                },
                processResults: function (data, params) {
                    debugger
                    params.page = params.page || 1;
                    return {
                        results: data.items,
                        pagination: {
                            more: (params.page * 30) < data.total_count
                        }
                    };
                },
                cache: true
            },
            escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
            minimumInputLength: 2,
            placeholder: 'Pesquise um paciente por nome ou código',
            //templateResult: funformatRepo, // omitted for brevity, see the source of this page
            templateResult: function (data) {
                debugger
                if (data.id === undefined) {
                    return data.text = 'Pesquisando...';
                }
                //debugger
                //$("#codCliente").val(data.id);
                return '<b>' + data.id + '</b>' + ' - ' + data.text;
            },
            //templateSelection: formatRepoSelection // omitted for brevity, see the source of this page
        });
    });

    function CreateCalendar(eventos) {
        $("#calendar").fullCalendar('destroy');
        $("#calendar").empty();

        /* initialize the external events
         -----------------------------------------------------------------*/

        $('#external-events div.external-event').each(function () {

            // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
            // it doesn't need to have a start or end
            var eventObject = {

                //title: $.trim($(this).text()) // use the element's text as the event title
                title: $.fullCalendar.formatDate($.trim($(this).text()), '[dddd, dd MMM, yyyy]')

            };

            // store the Event Object in the DOM element so we can get to it later
            $(this).data('eventObject', eventObject);

            // make the event draggable using jQuery UI
            $(this).draggable({
                zIndex: 999,
                revert: true,      // will cause the event to go back to its
                revertDuration: 0  //  original position after the drag
            });

        });


        /* initialize the calendar
         -----------------------------------------------------------------*/

        var date = new Date();
        var d = date.getDate();
        var m = date.getMonth();
        var y = date.getFullYear();

        $('#calendar').fullCalendar({

            views: {
                basic: {
                    //'[dddd, dd MMM, yyyy]',
                    titleFormat: 'DD/MM/YYYY'
                    // options apply to basicWeek and basicDay views
                },
                agenda: {
                    // options apply to agendaWeek and agendaDay views
                    titleFormat: 'DD/MM/YYYY'
                },
                week: {
                    // options apply to basicWeek and agendaWeek views
                    titleFormat: 'DD/MM/YYYY'
                },
                day: {
                    // options apply to basicDay and agendaDay views
                    titleFormat: 'DD/MM/YYYY'

                }
            },
            height: 650,

            lang: 'pt-br',
            monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
            monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sabado'],
            dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'],
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,basicWeek,basicDay,listMonth'
            },
            buttonText: {
                list:"Lista",
                today: "Hoje",
                month: "Mês",
                week: "Semana",
                day: "Dia",
                List: "Lista"
            },
            editable: false,
            droppable: false, // this allows things to be dropped onto the calendar !!!
            drop: function (date, allDay) { // this function is called when something is dropped
                // retrieve the dropped element's stored Event Object
                var originalEventObject = $(this).data('eventObject');
                // we need to copy it, so that multiple events don't have a reference to the same object
                var copiedEventObject = $.extend({}, originalEventObject);
                // assign it the date that was reported
                copiedEventObject.start = date;
                copiedEventObject.allDay = allDay;
                // render the event on the calendar
                // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);
                // is the "remove after drop" checkbox checked?
                if ($('#drop-remove').is(':checked')) {
                    // if so, remove the element from the "Draggable Events" list
                    $(this).remove();
                }
            },
            events: eventos,
            timeFormat: 'H(:mm)'
        });
        $(".fc-button-prev").click(function () {
            var datade = $('#calendar').fullCalendar('getView').visStart;
            if (datade < DataDeDadosCarregados) {
                window.setTimeout(GetAtendimentos, 100);
            }
        });

        $(".fc-button-next").click(function () {
            var dataa = $('#calendar').fullCalendar('getView').visEnd;

            if (dataa > DataAteDadosCarregados) {
                window.setTimeout(GetAtendimentos, 100);
            }
        });

        $(".fc-button-today").click(function () {
            var datade = $('#calendar').fullCalendar('getView').visStart;
            var dataa = $('#calendar').fullCalendar('getView').visEnd;

            if (dataa > DataAteDadosCarregados || datade < DataDeDadosCarregados) {
                window.setTimeout(GetAtendimentos, 100);
            }
        });
    }

    function GetAtendimentos() {
        var date = $('#calendar').fullCalendar('getDate');

        CalendarView = $('#calendar').fullCalendar('getView');
        $('#calendar').fullCalendar('changeView', "month");

        var datade = $('#calendar').fullCalendar('getView').visStart;
        var dataa = $('#calendar').fullCalendar('getView').visEnd;

        $('#calendar').fullCalendar('changeView', CalendarView.name);

        var paciente = $("#pacient").attr("codigo");
        var tipoatendimento = $("#tipoatendimento").val();

        DataDeDadosCarregados = datade;
        DataAteDadosCarregados = dataa;

        try {
            $.ajax({
                dataType: 'json',
                url: '@Url.Content("~/Agenda/GetListaAtendimentos")',
                data: { codigoPaciente: $("#pesquisaPacientes2").val() },
                success: function (data, status, xhr) {
                    assembleCalendar(data);

                },
                error: function (data, status, xhr) {
                    debugger
                    console.log("data: " + JSON.stringify(data) + "status: " + JSON.stringify(status) + "xhr" + JSON.stringify(xhr));
                    showMsgErro("Erro ao buscar agenda médica: " + data.responseText)
                }
            });
        } catch (e) {

        }

    }
    function assembleCalendar(schedule) {
        debugger

        function getCorStatus(statusName) {
            var status = "";
            try {
                status = statusName.toUpperCase();
            } catch (e) {
            }
            var cores = {
                "AGUARDANDO CONFIRMAÇÃO": "#2FB2DE",
                "PRESENTE": "#CCCCCC",
                "REMARCADO": "#00b22a",
                "ATENDIMENTO REALIZADO": "#377245",
                "CONFIRMADO": "#36D65B",
                "CONFIRMADOATRASADO": "#E8DC3A",
                "CANCELADO": "#DE4040",
                "FALTA": "#DE4040",
                "ATENDIMENTO INICIADO": "#e28b34",
                "LIBERADO PARA ATENDIMENTO": "#3d35ad",
                "AGUARDANDO FICHA": "#1a1566",
                "FAZENDO FICHA": "#336EA5"
            };

            debugger
            var cor = cores[status.toUpperCase()];
            debugger
            if (cor) {
                return cor;
            }
            return "#dbdaf2";
        };

        var _scheduleObjs = [];
        for (var i = 0; i < schedule.length; ++i) {
            var obj = new Object();
            var h = parseInt(schedule[i].Hora.split(":")[0]);

            var m = parseInt(schedule[i].Hora.split(":")[1]);

            var hn = (new Date()).getHours();
            var mn = (new Date()).getMinutes();
            var at = hn >= h && mn > m && schedule[i].Status == "Confirmado" ? "ATRASADO" : "";
            debugger
            obj.id = schedule[i].Codigodocumento;//, pacientes[i].tipodoc, pacientes[i].CodigoPaciente
            obj.title = schedule[i].Hora + " - " + schedule[i].NomePaciente;
            obj.start = dateFromString(schedule[i].DataDocumento);
            obj.tip = schedule[i].Status,
            obj.url = "javascript:mostraModalConfirmacaoInicioAtendimento('" + schedule[i].codigodocumento + "','" + schedule[i].tipodoc + "','" + schedule[i].CodigoPaciente + "','" + schedule[i].Status + "');"//'@Url.Content("~/Portal/PortalHome/Consulta?codedoc=")' + pacientes[i].codigodocumento + "&doctype=" + pacientes[i].tipodoc + "&codePac=" + pacientes[i].CodigoPaciente;
            //obj.url = '@Url.Content("~/Portal/PortalHome/Consulta?codedoc=")' + pacientes[i].codigodocumento + "&doctype=" + pacientes[i].tipodoc + "&codePac=" + pacientes[i].CodigoPaciente;
            obj.backgroundColor = getCorStatus(schedule[i].Status + at);
            _scheduleObjs.push(obj);
        }
        $('#calendar').fullCalendar('removeEvents');
        if (_scheduleObjs.length > 0) {
            debugger
            $('#calendar').fullCalendar('addEventSource', _scheduleObjs);
        }

        $('#calendar').fullCalendar('refetchEvents');
    }
    function dateFromString(str) {
        debugger
        var data = str.split("/");
        var ret = new Date();
        ret.setDate(data[0]);
        ret.setMonth(data[1] - 1);
        ret.setFullYear(data[2]);
        return ret;
    }

    function mostraModalConfirmacaoInicioAtendimento(codigodocumento, tipodoc, CodigoPaciente, Status) {
        debugger
        if ($("#isAtenndimentoAberto").val() === "true") {
            showMsgErro("ERRO: Existe um atendimento em aberto. Para continuar deve-se finalizar este atendimento.");
            $('html, body').animate({ scrollTop: 0 }, 'slow');

        //} else if (Status.toUpperCase() == "Atendimento realizado".toUpperCase()) {
        //    showMsgInfo("Aviso: Não é possivel iniciar um Atendimento Realizado")
        //    $('html, body').animate({ scrollTop: 0 }, 'slow');
        } else {
            $("#codigodocumentoModal").val(codigodocumento);
            $("#tipodocModal").val(tipodoc);
            $("#CodigoPacienteModal").val(CodigoPaciente);
            $("#modalIniciarConsulta").modal();
            $("#basicModal").modal();

            $('#my-modal').modal({
                show: 'false'
            });
        }
    }
</script>
<div class="modal fade" id="basicModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Deseja iniciar o atendimento do paciente?</h4>
            </div>
            <div class="modal-body">
                @Html.Hidden("codigodocumentoModal")
                @Html.Hidden("tipodocModal")
                @Html.Hidden("CodigoPacienteModal")
            </div>
            <div class="modal-footer">
                <button id="btnAtentimentoIniciar" onclick="iniciarAtendimento(true);" type="button" class="btn btn-primary">Sim</button>
                <button id="btnAtentimentoNao" onclick="limparModalIniciarAtendimento();" type="button" class="btn btn-default" data-dismiss="modal">Não</button>
                <button id="btnAtentimentoVer" onclick="iniciarAtendimento(false);" iniciarAtendimento type="button" class="btn btn-primary">Ver</button>
            </div>
        </div>
    </div>
</div>